{"version":3,"sources":["Components/CustomDrawerItems.js","Components/CustomDrawer.js","Components/CustomAppBar.js","Components/LoyaltyCard.js","Pages/LoyaltyCards.js","App.js","serviceWorker.js","index.js"],"names":["CustomDrawerItems","onClickListItem","link","_this","props","history","push","onClose","_this2","this","react_default","a","createElement","className","classes","list","index_es","button","component","onClick","icons_index_es","React","Component","CustomDrawerItemsWithStyles","withStyles","width","CustomDrawerItemsWithStylesWithRouter","withRouter","CustomDrawer","_React$Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","Drawer_default","open","CustomMenuAppBar","state","drawer","onClickMenu","setState","objectSpread","onCloseDrawer","root","position","menuButton","color","aria-label","variant","grow","CustomDrawer_CustomDrawer","CustomMenuAppBarWithStyles","flexGrow","marginLeft","marginRight","LoyaltyCard","style","margin","height","image","title","gutterBottom","moment","loyaltyCard","date","format","LoyaltyCards","_getPrototypeOf2","_len","length","args","Array","_key","call","concat","loyaltyCards","id","Date","map","LoyaltyCard_LoyaltyCard","months","App","BrowserRouter","basename","process","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.325e81eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { List, Divider, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { CreditCard, FormatListNumbered, Bookmark, Lock } from '@material-ui/icons';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  },\r\n};\r\n\r\nclass CustomDrawerItems extends React.Component {\r\n  onClickListItem = (link) => {\r\n    this.props.history.push(link);\r\n\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.classes.list}>\r\n        <List>\r\n          <ListItem button component=\"a\" onClick={() => this.onClickListItem('/')}>\r\n            <ListItemIcon>\r\n              <CreditCard />\r\n            </ListItemIcon>\r\n            <ListItemText> Lojaliteits Kaarte </ListItemText>\r\n          </ListItem>\r\n          <ListItem button component=\"a\" onClick={() => this.onClickListItem('/')}>\r\n            <ListItemIcon>\r\n              <FormatListNumbered />\r\n            </ListItemIcon>\r\n            <ListItemText> Ranglys </ListItemText>\r\n          </ListItem>\r\n          <ListItem button component=\"a\" onClick={() => this.onClickListItem('https://janvanriebeeck.co.za')}>\r\n            <ListItemIcon>\r\n              <Bookmark />\r\n            </ListItemIcon>\r\n            <ListItemText> Webwerf </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button component=\"a\" onClick={() => this.onClickListItem('/sign-in')}>\r\n            <ListItemIcon>\r\n              <Lock />\r\n            </ListItemIcon>\r\n            <ListItemText> Teken Uit </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCustomDrawerItems.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst CustomDrawerItemsWithStyles = withStyles(styles)(CustomDrawerItems);\r\n\r\nexport const CustomDrawerItemsWithStylesWithRouter = withRouter(CustomDrawerItemsWithStyles);\r\n","import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { CustomDrawerItemsWithStylesWithRouter } from './CustomDrawerItems';\r\n\r\nexport class CustomDrawer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Drawer open={this.props.open} onClose={this.props.onClose}>\r\n        <CustomDrawerItemsWithStylesWithRouter onClose={this.props.onClose} />\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\r\nimport { Menu } from '@material-ui/icons';\r\nimport { CustomDrawer } from './CustomDrawer';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass CustomMenuAppBar extends React.Component {\r\n  state = {\r\n    drawer: {\r\n      open: false,\r\n    },\r\n  };\r\n\r\n  onClickMenu = () => {\r\n    this.setState({\r\n      drawer: {\r\n        ...this.state.drawer,\r\n        open: !this.state.drawer.open,\r\n      },\r\n    });\r\n  };\r\n\r\n  onCloseDrawer = () => {\r\n    this.setState({\r\n      drawer: {\r\n        ...this.state.drawer,\r\n        open: false,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              onClick={this.onClickMenu}\r\n              className={this.props.classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"Menu\"\r\n            >\r\n              <Menu />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={this.props.classes.grow}>\r\n              &lt;My App&gt;\r\n            </Typography>\r\n            {/* <IconButton color=\"inherit\">\r\n              <AccountCircle />\r\n            </IconButton> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <CustomDrawer open={this.state.drawer.open} onClose={this.onCloseDrawer} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCustomMenuAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport const CustomMenuAppBarWithStyles = withStyles(styles)(CustomMenuAppBar);\r\n","import React from 'react';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Typography } from '@material-ui/core';\r\nimport * as moment from 'moment';\r\n\r\nexport class LoyaltyCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card style={{ margin: '8px' }}>\r\n        <CardActionArea>\r\n          <CardMedia style={{ height: '150px' }} image=\"images/loyalty-card-bg.jpg\" title=\"Loyalty Card Background\" />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h6\">\r\n              Lojaliteits Kaart\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{moment(this.props.loyaltyCard.date).format('DD MMMM YYYY')}</Typography>\r\n            <Typography component=\"p\">\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque ac ex sollicitudin, dictum sapien\r\n              eget, aliquam mi.\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { LoyaltyCard } from '../Components';\r\n\r\nexport class LoyaltyCards extends React.Component {\r\n  state = {\r\n    loyaltyCards: [\r\n      {\r\n        id: 1,\r\n        date: new Date(2019, 1, 14),\r\n      },\r\n      {\r\n        id: 2,\r\n        date: new Date(2019, 4, 22),\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return this.state.loyaltyCards.map((loyaltyCard) => <LoyaltyCard key={loyaltyCard.id} loyaltyCard={loyaltyCard} />);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { CustomMenuAppBarWithStyles } from './Components';\nimport { LoyaltyCards } from './Pages';\nimport * as moment from 'moment';\n\nmoment.locale('af', {\n  months: [\n    'Januarie',\n    'Februarie',\n    'Maart',\n    'April',\n    'Mei',\n    'Junie',\n    'Julie',\n    'Augustus',\n    'September',\n    'Oktober',\n    'November',\n    'Desember',\n  ],\n});\n\nmoment.locale('af');\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <CustomMenuAppBarWithStyles />\n          <Route exact path=\"/\" component={LoyaltyCards} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}